{
  "name": "VIRUSMVP_SARS-CoV-2",
  "description": "",
  "in_language": "['en']",
  "id": "https://example.com/VIRUSMVP",
  "version": "1.0.0",
  "prefixes": {
    "linkml": {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    "dcterms": {
      "prefix_prefix": "dcterms",
      "prefix_reference": "http://purl.org/dc/terms/"
    },
    "GENEPIO": {
      "prefix_prefix": "GENEPIO",
      "prefix_reference": "http://purl.obolibrary.org/obo/GENEPIO_"
    },
    "NCBITaxon": {
      "prefix_prefix": "NCBITaxon",
      "prefix_reference": "http://purl.obolibrary.org/obo/NCBITaxon_"
    },
    "OBI": {
      "prefix_prefix": "OBI",
      "prefix_reference": "http://purl.obolibrary.org/obo/OBI_"
    },
    "SIO": {
      "prefix_prefix": "SIO",
      "prefix_reference": "http://semanticscience.org/resource/SIO_"
    },
    "xsd": {
      "prefix_prefix": "xsd",
      "prefix_reference": "http://www.w3.org/2001/XMLSchema#"
    },
    "shex": {
      "prefix_prefix": "shex",
      "prefix_reference": "http://www.w3.org/ns/shex#"
    },
    "schema": {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    }
  },
  "default_prefix": "https://example.com/VIRUSMVP/",
  "types": {
    "WhitespaceMinimizedString": {
      "name": "WhitespaceMinimizedString",
      "description": "A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).",
      "from_schema": "https://example.com/VIRUSMVP",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "Provenance": {
      "name": "Provenance",
      "description": "A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.",
      "from_schema": "https://example.com/VIRUSMVP",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "string": {
      "name": "string",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "xsd:string"
    },
    "integer": {
      "name": "integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "xsd:integer"
    },
    "boolean": {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "xsd:boolean",
      "repr": "bool"
    },
    "float": {
      "name": "float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:float"
    },
    "double": {
      "name": "double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:double"
    },
    "decimal": {
      "name": "decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "xsd:decimal"
    },
    "time": {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "xsd:time",
      "repr": "str"
    },
    "date": {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "xsd:date",
      "repr": "str"
    },
    "datetime": {
      "name": "datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date_or_datetime": {
      "name": "date_or_datetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "str",
      "uri": "linkml:DateOrDatetime",
      "repr": "str"
    },
    "uriorcurie": {
      "name": "uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "URIorCURIE",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "curie": {
      "name": "curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "Curie",
      "uri": "xsd:string",
      "repr": "str"
    },
    "uri": {
      "name": "uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "ncname": {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "NCName",
      "uri": "xsd:string",
      "repr": "str"
    },
    "objectidentifier": {
      "name": "objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "ElementIdentifier",
      "uri": "shex:iri",
      "repr": "str"
    },
    "nodeidentifier": {
      "name": "nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "NodeIdentifier",
      "uri": "shex:nonLiteral",
      "repr": "str"
    },
    "jsonpointer": {
      "name": "jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "jsonpath": {
      "name": "jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "sparqlpath": {
      "name": "sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    }
  },
  "enums": {
    "organism menu": {
      "name": "organism menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "Severe acute respiratory syndrome coronavirus 2": {
          "text": "Severe acute respiratory syndrome coronavirus 2",
          "meaning": "NCBITaxon:2697049"
        }
      }
    },
    "reference accession menu": {
      "name": "reference accession menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "NC_045512.2": {
          "text": "NC_045512.2"
        }
      }
    },
    "reference database menu": {
      "name": "reference database menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "RefSeq": {
          "text": "RefSeq"
        }
      }
    },
    "gene name menu": {
      "name": "gene name menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "open reading frame 1ab polyprotein gene (SARS-CoV-2)": {
          "text": "open reading frame 1ab polyprotein gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101134"
        },
        "open reading frame 1a polyprotein gene (SARS-CoV-2)": {
          "text": "open reading frame 1a polyprotein gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101138"
        },
        "surface glycoprotein gene (SARS-CoV-2)": {
          "text": "surface glycoprotein gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101142"
        },
        "open reading frame 3a gene (SARS-CoV-2)": {
          "text": "open reading frame 3a gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101146"
        },
        "envelope gene (SARS-CoV-2)": {
          "text": "envelope gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101150"
        },
        "membrane glycoprotein gene (SARS-CoV-2)": {
          "text": "membrane glycoprotein gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101154"
        },
        "open reading frame 6 gene (SARS-CoV-2)": {
          "text": "open reading frame 6 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101158"
        },
        "open reading frame 7a gene (SARS-CoV-2)": {
          "text": "open reading frame 7a gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101162"
        },
        "open reading frame 7b gene (SARS-CoV-2)": {
          "text": "open reading frame 7b gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101166"
        },
        "open reading frame 8 gene (SARS-CoV-2)": {
          "text": "open reading frame 8 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101170"
        },
        "nucleocapsid phosphoprotein gene (SARS-CoV-2)": {
          "text": "nucleocapsid phosphoprotein gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101174"
        },
        "open reading frame 10 gene (SARS-CoV-2)": {
          "text": "open reading frame 10 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101178"
        }
      }
    },
    "gene symbol menu": {
      "name": "gene symbol menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "orf1ab gene (SARS-CoV-2)": {
          "text": "orf1ab gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101135"
        },
        "orf1a gene (SARS-CoV-2)": {
          "text": "orf1a gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101139"
        },
        "s gene (SARS-CoV-2)": {
          "text": "s gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101143"
        },
        "orf3a gene (SARS-CoV-2)": {
          "text": "orf3a gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101147"
        },
        "e gene (SARS-CoV-2)": {
          "text": "e gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101151"
        },
        "m gene (SARS-CoV-2)": {
          "text": "m gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101155"
        },
        "orf6 gene (SARS-CoV-2)": {
          "text": "orf6 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101159"
        },
        "orf7a gene (SARS-CoV-2)": {
          "text": "orf7a gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101163"
        },
        "orf7b gene (SARS-CoV-2)": {
          "text": "orf7b gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101167"
        },
        "orf8 gene (SARS-CoV-2)": {
          "text": "orf8 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101171"
        },
        "n gene (SARS-CoV-2)": {
          "text": "n gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101175"
        },
        "orf10 gene (SARS-CoV-2)": {
          "text": "orf10 gene (SARS-CoV-2)",
          "meaning": "GENEPIO:0101179"
        }
      }
    },
    "protein name menu": {
      "name": "protein name menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "open reading frame 1ab polyprotein (SARS-CoV-2)": {
          "text": "open reading frame 1ab polyprotein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101136"
        },
        "open reading frame 1a polyprotein (SARS-CoV-2)": {
          "text": "open reading frame 1a polyprotein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101140"
        },
        "surface glycoprotein (SARS-CoV-2)": {
          "text": "surface glycoprotein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101144"
        },
        "open reading frame 3a protein (SARS-CoV-2)": {
          "text": "open reading frame 3a protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101148"
        },
        "envelope protein (SARS-CoV-2)": {
          "text": "envelope protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101152"
        },
        "membrane glycoprotein (SARS-CoV-2)": {
          "text": "membrane glycoprotein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101156"
        },
        "open reading frame 6 protein (SARS-CoV-2)": {
          "text": "open reading frame 6 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101160"
        },
        "open reading frame 7a protein (SARS-CoV-2)": {
          "text": "open reading frame 7a protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101164"
        },
        "open reading frame 7b protein (SARS-CoV-2)": {
          "text": "open reading frame 7b protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101168"
        },
        "open reading frame 8 protein (SARS-CoV-2)": {
          "text": "open reading frame 8 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101172"
        },
        "nucleocapsid phosphoprotein (SARS-CoV-2)": {
          "text": "nucleocapsid phosphoprotein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101176"
        },
        "open reading frame 10 protein (SARS-CoV-2)": {
          "text": "open reading frame 10 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101180"
        }
      }
    },
    "protein symbol menu": {
      "name": "protein symbol menu",
      "from_schema": "https://example.com/VIRUSMVP",
      "permissible_values": {
        "Orf1ab protein (SARS-CoV-2)": {
          "text": "Orf1ab protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101137"
        },
        "Orf1a protein (SARS-CoV-2)": {
          "text": "Orf1a protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101141"
        },
        "S protein (SARS-CoV-2)": {
          "text": "S protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101145"
        },
        "Orf3a protein (SARS-CoV-2)": {
          "text": "Orf3a protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101149"
        },
        "E protein (SARS-CoV-2)": {
          "text": "E protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101153"
        },
        "M protein (SARS-CoV-2)": {
          "text": "M protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101157"
        },
        "Orf6 protein (SARS-CoV-2)": {
          "text": "Orf6 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101161"
        },
        "Orf7a protein (SARS-CoV-2)": {
          "text": "Orf7a protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101165"
        },
        "Orf7b protein (SARS-CoV-2)": {
          "text": "Orf7b protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101169"
        },
        "Orf8 protein (SARS-CoV-2)": {
          "text": "Orf8 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101173"
        },
        "N protein (SARS-CoV-2)": {
          "text": "N protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101177"
        },
        "Orf10 protein (SARS-CoV-2)": {
          "text": "Orf10 protein (SARS-CoV-2)",
          "meaning": "GENEPIO:0101181"
        }
      }
    }
  },
  "slots": {
    "organism": {
      "name": "organism",
      "description": "The virus being analyzed.",
      "title": "organism",
      "examples": [
        {
          "value": "Severe acute respiratory syndrome coronavirus 2"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "OBI:0100026",
      "range": "organism menu",
      "required": true
    },
    "reference_accession": {
      "name": "reference_accession",
      "description": "An identifier that specifies an individual sequence record in a public sequence repository.",
      "title": "reference accession",
      "comments": [
        "Use the versioned accession number here."
      ],
      "examples": [
        {
          "value": "NC_045512.2"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "OBI:0002885",
      "range": "reference accession menu",
      "required": true
    },
    "reference_database_name": {
      "name": "reference_database_name",
      "description": "An identifier of a biological or bioinformatics database.",
      "title": "reference database name",
      "comments": [
        "The name of the reference database may need to be entered manually if not automatically recorded as a parameter within the tool."
      ],
      "examples": [
        {
          "value": "RefSeq"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "OBI:0002883",
      "range": "reference database menu",
      "required": true
    },
    "nucleotide_position": {
      "name": "nucleotide_position",
      "description": "A sequence datum which is the 1-based start position of a sequence feature for a given nucleotide sequence.",
      "title": "nucleotide position",
      "examples": [
        {
          "value": "351"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101033",
      "range": "integer",
      "required": true,
      "minimum_value": 0
    },
    "original_mutation_description": {
      "name": "original_mutation_description",
      "description": "A sequence datum which describes a mutation, written in the user's own notation.",
      "title": "original mutation description",
      "examples": [
        {
          "value": "D614G, 12-bp deletion in E at nucleotide position 54647, D to G substitution at amino acid 614"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101030",
      "range": "string",
      "required": true
    },
    "nucleotide_mutation": {
      "name": "nucleotide_mutation",
      "description": "A sequence datum which describes a nucleotide sequence change as compared to a reference sequence, represented by a specified notation system.",
      "title": "nucleotide mutation",
      "comments": [
        "Use HGVS syntax; c. (coding) g.(genomic), or r. (ribosomal) mutations should be included here."
      ],
      "examples": [
        {
          "value": "NC_045512.2:c.1850_1851insGT"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0100402",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "amino_acid_mutation": {
      "name": "amino_acid_mutation",
      "description": "A sequence datum which describes an amino acid sequence change as compared to a reference sequence, represented by a specified notation system.",
      "title": "amino acid mutation",
      "comments": [
        "Use HGVS syntax; p. (protein) mutations should be included here; use 3 letter code preferred for amino acids. For multiple amino acids that are correlated with a functional impact as a group, input a comma-separated list of mutations. It does not need to be known whether all mutations in the group are individually correlated with the functional impact."
      ],
      "examples": [
        {
          "value": "YP_009724390.1:p.Cys3563Ser, YP_009724390.1:p.Asp614Gly"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0100406",
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "amino_acid_mutation_alias": {
      "name": "amino_acid_mutation_alias",
      "description": "For SARS-CoV-2. The alias is an amino acid name indexed from the start of each nsp in Orf1ab, as opposed to from the start of the gene as is the default.",
      "title": "amino acid mutation alias",
      "comments": [
        "Use HGVS syntax; p. (protein) mutations should be included here; use 3 letter code preferred for amino acids."
      ],
      "examples": [
        {
          "value": "YP_009724390.1:p.Cys300Ser"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0100406",
      "range": "WhitespaceMinimizedString"
    },
    "gene_name": {
      "name": "gene_name",
      "description": "The name of a gene, (typically) assigned by a person and/or according to a naming scheme. It may contain white space characters and is typically more intuitive and readable than a gene symbol. It (typically) may be used to identify similar genes in different species and to derive a gene symbol.",
      "title": "gene name",
      "examples": [
        {
          "value": "surface glycoprotein gene (SARS-CoV-2)"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101130",
      "range": "gene name menu",
      "required": true
    },
    "gene_symbol": {
      "name": "gene_symbol",
      "description": "The short name of a gene; a single word that does not contain white space characters. It is typically derived from the gene name.",
      "title": "gene symbol",
      "examples": [
        {
          "value": "s gene (SARS-CoV-2)"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101131",
      "range": "gene symbol menu",
      "required": true
    },
    "protein_name": {
      "name": "protein_name",
      "description": "The name of a protein, (typically) assigned by a person and/or according to a naming scheme. It may contain white space characters and is typically more intuitive and readable than a protein symbol. It (typically) may be used to identify similar proteins in different species and to derive a protein symbol.",
      "title": "protein name",
      "examples": [
        {
          "value": "surface glycoprotein (SARS-CoV-2)"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101132",
      "range": "protein name menu",
      "required": true
    },
    "protein_symbol": {
      "name": "protein_symbol",
      "description": "The short name of a protein; a single word that does not contain white space characters. It is typically derived from the protein name.",
      "title": "protein symbol",
      "examples": [
        {
          "value": "S protein (SARS-CoV-2)"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101133",
      "range": "protein symbol menu",
      "required": true
    },
    "variant_functional_effect": {
      "name": "variant_functional_effect",
      "description": "The functional category of the mutation impact.",
      "title": "variant functional effect",
      "comments": [
        "Freetext; a future update will have a picklist here."
      ],
      "examples": [
        {
          "value": "dimerization"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101127",
      "range": "string",
      "required": true
    },
    "variant_functional_effect_description": {
      "name": "variant_functional_effect_description",
      "description": "A freetext description of the functional effect of a mutation.",
      "title": "variant functional effect description",
      "examples": [
        {
          "value": "This mutation demonstrates that glutathionylation (in vivo oxidative post-translational modification of cysteine) of Mpro/NSP5 residue C300 is responsible for controlling the dimerization of the protein, where the monomer's protease activity is hampered by the collapsing  of the active site pocket."
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "GENEPIO:0101036",
      "range": "string",
      "required": true
    },
    "author": {
      "name": "author",
      "description": "The last name of the first author of the paper or other resource containing the evidence for the mutation impact.",
      "title": "author",
      "comments": [
        "The surname of the publication's first author, without \"et al.\" added."
      ],
      "examples": [
        {
          "value": "Davis"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dcterms:creator",
      "range": "string",
      "required": true
    },
    "publication_year": {
      "name": "publication_year",
      "description": "The publication year of the evidence source.",
      "title": "publication year",
      "examples": [
        {
          "value": "2021"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dcterms:date",
      "range": "integer",
      "required": true
    },
    "URL": {
      "name": "URL",
      "description": "A link to the literature evidence source.",
      "title": "URL",
      "comments": [
        "If the evidence is found in supplemental material, still link to the paper itself."
      ],
      "examples": [
        {
          "value": "https://www.biorxiv.org/content/10.1101/2021.01.22.427749v1"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dcterms:source",
      "range": "string",
      "required": true
    },
    "DOI": {
      "name": "DOI",
      "description": "The DOI of the literature evidence source.",
      "title": "DOI",
      "examples": [
        {
          "value": "10.1101/2021.01.22.427749"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dbXref",
      "range": "string",
      "recommended": true
    },
    "PMID": {
      "name": "PMID",
      "description": "The PMID of the literature evidence source.",
      "title": "PMID",
      "examples": [
        {
          "value": "34755213"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dbXref",
      "range": "string",
      "recommended": true
    },
    "peer_review_status": {
      "name": "peer_review_status",
      "description": "Peer review status for the literature evidence document: true or false.",
      "title": "peer review status",
      "examples": [
        {
          "value": "peer reviewed"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "SIO:001035",
      "range": "boolean",
      "required": true
    },
    "curator": {
      "name": "curator",
      "description": "The ORCID of the curator who created the annotation record.",
      "title": "curator",
      "comments": [
        "If no ORCID is available, write the curator's full name here."
      ],
      "examples": [
        {
          "value": "0000-0002-0548-891X"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dcterms:contributor",
      "range": "string"
    },
    "mutation_functional_annotation_resource": {
      "name": "mutation_functional_annotation_resource",
      "description": "The resource containing the functional annotation for the mutation.",
      "title": "mutation functional annotation resource",
      "examples": [
        {
          "value": "Pokay, SARS-CoV-2 Harvest Variants"
        }
      ],
      "from_schema": "https://example.com/VIRUSMVP",
      "slot_uri": "dcterms:seeAlso",
      "range": "string"
    }
  },
  "classes": {
    "dh_interface": {
      "name": "dh_interface",
      "description": "A DataHarmonizer interface",
      "from_schema": "https://example.com/VIRUSMVP"
    },
    "VIRUSMVP_SARS-CoV-2": {
      "name": "VIRUSMVP_SARS-CoV-2",
      "description": "Specification for VIRUS-MVP SARS-CoV-2 mutation functional impact data gathering",
      "from_schema": "https://example.com/VIRUSMVP",
      "see_also": [
        "templates/virusmvp/SOP.pdf"
      ],
      "is_a": "dh_interface",
      "slot_usage": {
        "organism": {
          "name": "organism",
          "rank": 1,
          "slot_group": "reference sequence information"
        },
        "reference_accession": {
          "name": "reference_accession",
          "rank": 2,
          "slot_group": "reference sequence information"
        },
        "reference_database_name": {
          "name": "reference_database_name",
          "rank": 3,
          "slot_group": "reference sequence information"
        },
        "nucleotide_position": {
          "name": "nucleotide_position",
          "rank": 4,
          "slot_group": "mutation location information"
        },
        "original_mutation_description": {
          "name": "original_mutation_description",
          "rank": 5,
          "slot_group": "mutation location information"
        },
        "nucleotide_mutation": {
          "name": "nucleotide_mutation",
          "rank": 6,
          "slot_group": "mutation location information"
        },
        "amino_acid_mutation": {
          "name": "amino_acid_mutation",
          "rank": 7,
          "slot_group": "mutation location information"
        },
        "amino_acid_mutation_alias": {
          "name": "amino_acid_mutation_alias",
          "rank": 8,
          "slot_group": "mutation location information"
        },
        "gene_name": {
          "name": "gene_name",
          "rank": 9,
          "slot_group": "mutation location information"
        },
        "gene_symbol": {
          "name": "gene_symbol",
          "rank": 10,
          "slot_group": "mutation location information"
        },
        "protein_name": {
          "name": "protein_name",
          "rank": 11,
          "slot_group": "mutation location information"
        },
        "protein_symbol": {
          "name": "protein_symbol",
          "rank": 12,
          "slot_group": "mutation location information"
        },
        "variant_functional_effect": {
          "name": "variant_functional_effect",
          "rank": 13,
          "slot_group": "functional effect information"
        },
        "variant_functional_effect_description": {
          "name": "variant_functional_effect_description",
          "rank": 14,
          "slot_group": "functional effect information"
        },
        "author": {
          "name": "author",
          "rank": 15,
          "slot_group": "literature citation"
        },
        "publication_year": {
          "name": "publication_year",
          "rank": 16,
          "slot_group": "literature citation"
        },
        "URL": {
          "name": "URL",
          "rank": 17,
          "slot_group": "literature citation"
        },
        "DOI": {
          "name": "DOI",
          "rank": 18,
          "slot_group": "literature citation"
        },
        "PMID": {
          "name": "PMID",
          "rank": 19,
          "slot_group": "literature citation"
        },
        "peer_review_status": {
          "name": "peer_review_status",
          "rank": 20,
          "slot_group": "literature citation"
        },
        "curator": {
          "name": "curator",
          "rank": 21,
          "slot_group": "contributor acknowledgement"
        },
        "mutation_functional_annotation_resource": {
          "name": "mutation_functional_annotation_resource",
          "rank": 22,
          "slot_group": "contributor acknowledgement"
        }
      },
      "attributes": {
        "organism": {
          "name": "organism",
          "description": "The virus being analyzed.",
          "title": "organism",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 1,
          "slot_uri": "OBI:0100026",
          "alias": "organism",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "reference sequence information",
          "range": "organism menu",
          "required": true
        },
        "reference_accession": {
          "name": "reference_accession",
          "description": "An identifier that specifies an individual sequence record in a public sequence repository.",
          "title": "reference accession",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 2,
          "slot_uri": "OBI:0002885",
          "alias": "reference_accession",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "reference sequence information",
          "range": "reference accession menu",
          "required": true
        },
        "reference_database_name": {
          "name": "reference_database_name",
          "description": "An identifier of a biological or bioinformatics database.",
          "title": "reference database name",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 3,
          "slot_uri": "OBI:0002883",
          "alias": "reference_database_name",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "reference sequence information",
          "range": "reference database menu",
          "required": true
        },
        "nucleotide_position": {
          "name": "nucleotide_position",
          "description": "A sequence datum which is the 1-based start position of a sequence feature for a given nucleotide sequence.",
          "title": "nucleotide position",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 4,
          "slot_uri": "GENEPIO:0101033",
          "alias": "nucleotide_position",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "integer",
          "required": true,
          "minimum_value": 0
        },
        "original_mutation_description": {
          "name": "original_mutation_description",
          "description": "A sequence datum which describes a mutation, written in the user's own notation.",
          "title": "original mutation description",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 5,
          "slot_uri": "GENEPIO:0101030",
          "alias": "original_mutation_description",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "string",
          "required": true
        },
        "nucleotide_mutation": {
          "name": "nucleotide_mutation",
          "description": "A sequence datum which describes a nucleotide sequence change as compared to a reference sequence, represented by a specified notation system.",
          "title": "nucleotide mutation",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 6,
          "slot_uri": "GENEPIO:0100402",
          "alias": "nucleotide_mutation",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "amino_acid_mutation": {
          "name": "amino_acid_mutation",
          "description": "A sequence datum which describes an amino acid sequence change as compared to a reference sequence, represented by a specified notation system.",
          "title": "amino acid mutation",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 7,
          "slot_uri": "GENEPIO:0100406",
          "alias": "amino_acid_mutation",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "amino_acid_mutation_alias": {
          "name": "amino_acid_mutation_alias",
          "description": "For SARS-CoV-2. The alias is an amino acid name indexed from the start of each nsp in Orf1ab, as opposed to from the start of the gene as is the default.",
          "title": "amino acid mutation alias",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 8,
          "slot_uri": "GENEPIO:0100406",
          "alias": "amino_acid_mutation_alias",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "WhitespaceMinimizedString"
        },
        "gene_name": {
          "name": "gene_name",
          "description": "The name of a gene, (typically) assigned by a person and/or according to a naming scheme. It may contain white space characters and is typically more intuitive and readable than a gene symbol. It (typically) may be used to identify similar genes in different species and to derive a gene symbol.",
          "title": "gene name",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 9,
          "slot_uri": "GENEPIO:0101130",
          "alias": "gene_name",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "gene name menu",
          "required": true
        },
        "gene_symbol": {
          "name": "gene_symbol",
          "description": "The short name of a gene; a single word that does not contain white space characters. It is typically derived from the gene name.",
          "title": "gene symbol",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 10,
          "slot_uri": "GENEPIO:0101131",
          "alias": "gene_symbol",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "gene symbol menu",
          "required": true
        },
        "protein_name": {
          "name": "protein_name",
          "description": "The name of a protein, (typically) assigned by a person and/or according to a naming scheme. It may contain white space characters and is typically more intuitive and readable than a protein symbol. It (typically) may be used to identify similar proteins in different species and to derive a protein symbol.",
          "title": "protein name",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 11,
          "slot_uri": "GENEPIO:0101132",
          "alias": "protein_name",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "protein name menu",
          "required": true
        },
        "protein_symbol": {
          "name": "protein_symbol",
          "description": "The short name of a protein; a single word that does not contain white space characters. It is typically derived from the protein name.",
          "title": "protein symbol",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 12,
          "slot_uri": "GENEPIO:0101133",
          "alias": "protein_symbol",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "mutation location information",
          "range": "protein symbol menu",
          "required": true
        },
        "variant_functional_effect": {
          "name": "variant_functional_effect",
          "description": "The functional category of the mutation impact.",
          "title": "variant functional effect",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 13,
          "slot_uri": "GENEPIO:0101127",
          "alias": "variant_functional_effect",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "functional effect information",
          "range": "string",
          "required": true
        },
        "variant_functional_effect_description": {
          "name": "variant_functional_effect_description",
          "description": "A freetext description of the functional effect of a mutation.",
          "title": "variant functional effect description",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 14,
          "slot_uri": "GENEPIO:0101036",
          "alias": "variant_functional_effect_description",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "functional effect information",
          "range": "string",
          "required": true
        },
        "author": {
          "name": "author",
          "description": "The last name of the first author of the paper or other resource containing the evidence for the mutation impact.",
          "title": "author",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 15,
          "slot_uri": "dcterms:creator",
          "alias": "author",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "string",
          "required": true
        },
        "publication_year": {
          "name": "publication_year",
          "description": "The publication year of the evidence source.",
          "title": "publication year",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 16,
          "slot_uri": "dcterms:date",
          "alias": "publication_year",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "integer",
          "required": true
        },
        "URL": {
          "name": "URL",
          "description": "A link to the literature evidence source.",
          "title": "URL",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 17,
          "slot_uri": "dcterms:source",
          "alias": "URL",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "string",
          "required": true
        },
        "DOI": {
          "name": "DOI",
          "description": "The DOI of the literature evidence source.",
          "title": "DOI",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 18,
          "slot_uri": "dbXref",
          "alias": "DOI",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "string",
          "recommended": true
        },
        "PMID": {
          "name": "PMID",
          "description": "The PMID of the literature evidence source.",
          "title": "PMID",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 19,
          "slot_uri": "dbXref",
          "alias": "PMID",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "string",
          "recommended": true
        },
        "peer_review_status": {
          "name": "peer_review_status",
          "description": "Peer review status for the literature evidence document: true or false.",
          "title": "peer review status",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 20,
          "slot_uri": "SIO:001035",
          "alias": "peer_review_status",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "literature citation",
          "range": "boolean",
          "required": true
        },
        "curator": {
          "name": "curator",
          "description": "The ORCID of the curator who created the annotation record.",
          "title": "curator",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 21,
          "slot_uri": "dcterms:contributor",
          "alias": "curator",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "contributor acknowledgement",
          "range": "string"
        },
        "mutation_functional_annotation_resource": {
          "name": "mutation_functional_annotation_resource",
          "description": "The resource containing the functional annotation for the mutation.",
          "title": "mutation functional annotation resource",
          "from_schema": "https://example.com/VIRUSMVP",
          "rank": 22,
          "slot_uri": "dcterms:seeAlso",
          "alias": "mutation_functional_annotation_resource",
          "owner": "VIRUSMVP_SARS-CoV-2",
          "domain_of": [
            "VIRUSMVP_SARS-CoV-2"
          ],
          "slot_group": "contributor acknowledgement",
          "range": "string"
        }
      }
    }
  },
  "source_file": "schema.yaml",
  "settings": {
    "Title_Case": {
      "setting_key": "Title_Case",
      "setting_value": "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
    },
    "UPPER_CASE": {
      "setting_key": "UPPER_CASE",
      "setting_value": "[A-Z\\W\\d_]*"
    },
    "lower_case": {
      "setting_key": "lower_case",
      "setting_value": "[a-z\\W\\d_]*"
    }
  },
  "@type": "SchemaDefinition"
}